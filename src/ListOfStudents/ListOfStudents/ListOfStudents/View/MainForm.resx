<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAALl0Gq65dRvyunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0
        G++6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvuXUb8rl0
        Gq4AAAAAAAAAAAAAAAAAAAAAuXQbve64Btf/zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///M
        AP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///M
        AP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAAAAC5dBu97rgG1//MAP//zAD//8wA/92hDcS6dhriunYa4rp2
        GuK6dhriunYa4rp2Gt/6xgLt/8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///M
        AP//zAD//8wA//G7Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0G73uuAbX/8wA///MAP//zAD//ssA/frF
        Au/6xQLv+sUC7/rFAu/6xQLv/McB9P/MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///M
        AP//zAD//8wA///MAP//zAD/8bsG27l0G70AAAAAAAAAAAAAAAAAAAAAuXQbve64Btf/zAD//8wA///M
        AP/iqAzHwHsZzcB7Gc3AexnNwHsZzcB7Gc3AexnNwHsZzcB7Gc3AexnNwHsZzcB7Gc3AexnNwHsZzeKo
        DMf/zAD//8wA///MAP//zAD//8wA///MAP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAAAAC5dBu97rgG1//M
        AP//zAD//8wA//vHAfPutgbW7rYG1u62BtbutgbW7rYG1u62BtbutgbW7rYG1u62BtbutgbW7rYG1u62
        BtbutgbW+8cB8//MAP//zAD//8wA///MAP//zAD//8wA//G7Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0
        G73uuAbX/8wA///MAP//zAD/568JzciHFcLIhxXCyIcVwsiHFcLIhxXCyIcVwsiHFcLIhxXCyIcVwsiH
        FcLIhxXCyIcVwsiHFcLIhxXCyIcVwsiHFcLIhxXCyIcVwsuLFMD/zAD/8bsG27l0G70AAAAAAAAAAAAA
        AAAAAAAAuXQbve64Btf/zAD//8wA///MAP/2wgPm4acMxuGnDMbhpwzG4acMxuGnDMbhpwzG4acMxuGn
        DMbhpwzG4acMxuGnDMbhpwzG4acMxuGnDMbhpwzG4acMxuGnDMbhpwzG564JzP/MAP/xuwbbuXQbvQAA
        AAAAAAAAAAAAAAAAAAC5dBu97rgG1//MAP//zAD//8wA///LAP7EgRfGunYa4rp2GuK6dhriunYa4rp2
        GuK6dhriunYa4rp2GuK6dhriunYa4rp2GuK6dhriunYa4rp2GuK6dhriw4EXxf/MAP//zAD//8wA//G7
        Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0G73uuAbX/8wA///MAP//zAD/+8YC8Lt4IOD69e/v+vXv7/r1
        7+/69e/v+vXv7/r17+/69e/v+vXv7/r17+/69e/v+vXv7/r17+/69e/v+vXv7/r17++6diDi+8cB8//M
        AP//zAD/8bsG27l0G70AAAAAAAAAAAAAAAAAAAAAuXQbve64Btf/zAD//8wA///MAP/6xQLvu3gh3f//
        ///ixaHH06lywNOpcsDTqXLA06lywNOpcsDTqXLA06lywNOpcsDTqXLA06lywNOpcsDjyKTI/////7p3
        IN/7xgHy/8wA///MAP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAAAAC5dBu97rgG1//MAP//zAD//8wA//rF
        Au+7eCHd/////716JtfWlxDA2pwOwtqcDsLanA7C2pwOwtqcDsLanA7C2pwOwtqcDsLanA7C05QRv71+
        K9H/////uncg3/vGAfL/zAD//8wA//G7Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0G73uuAbX/8wA///M
        AP//zAD/+sUC77t4Id3/////vXom1/rEAu3/zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///M
        AP/1vwPkvX4r0f////+6dyDf+8YB8v/MAP//zAD/8bsG27l0G70AAAAAAAAAAAAAAAAAAAAAuXQbve64
        Btf/zAD//8wA///MAP/6xQLvu3gh3f////+9eibX+sQC7f/MAP//zAD//8wA///MAP//zAD//8wA///M
        AP//zAD//8wA//W/A+S9fivR/////7p3IN/7xgHy/8wA///MAP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAA
        AAC5dBu97rgG1//MAP//zAD//8wA//rFAu+7eCHd/////716Jtf6xALt/8wA///MAP//zAD//8wA///M
        AP//zAD//8wA///MAP//zAD/9b8D5L1+K9H/////uncg3/vGAfL/zAD//8wA//G7Btu5dBu9AAAAAAAA
        AAAAAAAAAAAAALl0G73uuAbX/8wA///MAP//zAD/+sUC77t4Id3/////v4AuzvC4Btj/zAD//8wA///M
        AP//zAD//8wA///MAP//zAD//8wA///MAP/rswfQwYQ1yf////+6dyDf+8YB8v/MAP//zAD/8bsG27l0
        G70AAAAAAAAAAAAAAAAAAAAAuXQbve64Btf/zAD//8wA///MAP/6xQLvu3gh3f/////Tp2+/zo0TwP/M
        AP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA/8qIFcHXrnzA/////7p3IN/7xgHy/8wA///M
        AP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAAAAC5dBu97rgG1//MAP//zAD//8wA//rFAu+7eCHd//////v3
        8fK7dyLc3aENw//MAP/3wwPoy4sUwL98Gc7NixTA+cUC7P/MAP/ZnQ/Bu3gi2/z69vX/////uncg3/vG
        AfL/zAD//8wA//G7Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0G73uuAbX/8wA///MAP//zAD/+sUC77t4
        Id3///////////bt4uW/gS/Ou3Ya4bt1G+TSpmy/7t7I1s+gY7+6dRviunUb4r+CMcz38Obp////////
        //+6dyDf+8YB8v/MAP//zAD/8bsG27l0G70AAAAAAAAAAAAAAAAAAAAAuXQbve64Btf/zAD//8wA///M
        AP/6xQLvu3gh3f/////////////////////1693i8eLQ2vDiz9nevpTE8eLQ2u7eyNb17ODk////////
        /////////////7p3IN/7xgHy/8wA///MAP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAAAAC5dBu97rgG1//M
        AP//zAD//8wA//rFAu+7eCHd///////////////////////////Pn2G/vXga18uLFMC8eBrZ0KJlv///
        ////////////////////////uncg3/vGAfL/zAD//8wA//G7Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0
        G73uuAbX/8wA///MAP//zAD/+sUC77t4Id3/////////////////////8ePS27t4Gtf+ywD7/8wA//3K
        Afm7dxrb9OjZ3/////////////////////+6dyDf+8YB8v/MAP//zAD/8bsG27l0G70AAAAAAAAAAAAA
        AAAAAAAAuXQbve64Btf/zAD//8wA///MAP/6xQLvu3gh3f/////////////////////gwZnFyooUwP/M
        AP//zAD//8wA/8iGFcLkyKbJ/////////////////////7p3IN/7xgHy/8wA///MAP/xuwbbuXQbvQAA
        AAAAAAAAAAAAAAAAAAC5dBu97rgG1//MAP//zAD//8wA//rFAu+7eCHd//////////////////////Lm
        1d27dxrb/ckB9v/MAP/8yQH1u3Yb3PXs4OT/////////////////////uncg3/vGAfL/zAD//8wA//G7
        Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0G73uuAbX/8wA///MAP//zAD/+sUC77t4Id3/////////////
        /////////////9WqdMC7dxvdxYQWw7t3G93Xr33A//////////////////////////+6dyDf+8YB8v/M
        AP//zAD/8bsG27l0G70AAAAAAAAAAAAAAAAAAAAAuXQbve64Btf/zAD//8wA///MAP/6xQLvu3gh3f//
        //////////////////////////////Xs3uPky6rK9u3h5f///////////////////////////////7p3
        IN/7xgHy/8wA///MAP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAAAAC5dBu97rgG1//MAP//zAD//8wA//vG
        AfK6dh/l7t7I1u7eyNbu3sjW7t7I1u7eyNbu3sjW7t7I1u7eyNbu3sjW7t7I1u7eyNbu3sjW7t7I1u7e
        yNbu3sjWunYe5vzJAfT/zAD//8wA//G7Btu5dBu9AAAAAAAAAAAAAAAAAAAAALl0G73uuAbX/8wA///M
        AP//zAD//8wA/8+QE7/CgRfGwoEXxsKBF8bCgRfGwoEXxsKBF8bCgRfGwoEXxsKBF8bCgRfGwoEXxsKB
        F8bCgRfGwoEXxsKBF8bSkxG//8wA///MAP//zAD/8bsG27l0G70AAAAAAAAAAAAAAAAAAAAAuXQbve64
        Btf/zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///M
        AP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP/xuwbbuXQbvQAAAAAAAAAAAAAAAAAA
        AAC5dBu97rgG1//MAP//zAD/3J4Owrp0G++6dBvvunQb77p0G+/prwnO/8wA/+ClDMa6dBvvunQb77p0
        G++6dBvv4KUMxv/MAP/nrgnNunQb77p0G++6dBvvunQb79mdD8H/zAD//8wA//G7Btu5dBu9AAAAAAAA
        AAAAAAAAAAAAALl0G73uuAbX/8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///M
        AP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD//8wA///MAP//zAD/8bsG27l0
        G70AAAAAAAAAAAAAAAAAAAAAuXQarrl1G/K6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0
        G++6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0G++6dBvvunQb77p0
        G++5dRvyuXQargAAAAAAAAAAwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAM=
</value>
  </data>
</root>